// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class AppleTestTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void appleTest() {
    driver.get("https://www.apple.com/br/");
    driver.manage().window().setSize(new Dimension(1050, 721));
    driver.findElement(By.linkText("Mac")).click();
    driver.findElement(By.cssSelector(".macbook-air")).click();
    assertThat(driver.findElement(By.cssSelector(".macbook-air .typography-hero-product-headline")).getText(), is("MacBook Air"));
    driver.findElement(By.linkText("iPad")).click();
    driver.findElement(By.cssSelector(".flipped > .text-content")).click();
    assertThat(driver.findElement(By.cssSelector(".flipped .typography-hero-headline")).getText(), is("Novo\\\\niPad"));
    driver.findElement(By.linkText("iPhone")).click();
    driver.findElement(By.cssSelector(".tile-iphone-14 .copy-wrapper")).click();
    driver.findElement(By.cssSelector(".section-wrapper:nth-child(1) .hero-eyebrow-image")).click();
    driver.findElement(By.cssSelector(".section-wrapper:nth-child(1) .hero-eyebrow-image")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".section-wrapper:nth-child(1) .hero-eyebrow-image"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".links-stacked:nth-child(7) .icon-copy")).click();
    assertThat(driver.findElement(By.linkText("iPhone SE")).getText(), is("iPhone SE"));
    driver.findElement(By.linkText("Especificações")).click();
    driver.findElement(By.linkText("Watch")).click();
    driver.findElement(By.cssSelector(".section-wrapper")).click();
    assertThat(driver.findElement(By.cssSelector(".section-wrapper > .typography-headline")).getText(), is("Qual é o Apple Watch\\\\nideal para você?"));
    driver.findElement(By.linkText("AirPods")).click();
    driver.findElement(By.cssSelector(".section-airpods-3rd-gen .section-tile-wrapper")).click();
    driver.findElement(By.cssSelector(".third-gen-new-update > .hero-headline")).click();
    driver.findElement(By.cssSelector(".third-gen-new-update > .hero-headline")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".third-gen-new-update > .hero-headline"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".third-gen-new-update > .hero-headline")).click();
    driver.findElement(By.cssSelector(".third-gen-new-update:nth-child(2)")).click();
    assertThat(driver.findElement(By.cssSelector(".third-gen-new-update > .hero-headline")).getText(), is("AirPods"));
    driver.findElement(By.linkText("TV e Casa")).click();
    driver.findElement(By.cssSelector(".typography-hero-headline")).click();
    assertThat(driver.findElement(By.cssSelector(".typography-hero-headline")).getText(), is("Convide o futuro para entrar na sua casa."));
  }
}
